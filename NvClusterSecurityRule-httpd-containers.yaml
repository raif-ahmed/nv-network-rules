apiVersion: neuvector.com/v1
kind: NvClusterSecurityRule
metadata:
  name: custom.containers.httpd
  namespace: ""
spec:
  dlp:
    settings: []
    status: true
  egress:
  - action: allow
    applications:
    - HTTP
    name: custom.containers.httpd-egress-1
    ports: any
    priority: 4
    selector:
      comment: ""
      criteria:
      - key: domain
        op: =
        value: sample2
      - key: label
        op: =
        value: deployment=httpd
      name: nv.ip.httpd.sample2
      original_name: ""
  - action: allow
    applications:
    - DNS
    name: custom.containers.httpd-egress-2
    ports: udp/53
    priority: 3
    selector:
      comment: ""
      criteria:
      - key: domain
        op: =
        value: openshift-dns
      - key: label
        op: =
        value: dns.operator.openshift.io/daemonset-dns=default
      name: nv.ip.dns-default.openshift-dns
      original_name: ""
  file: []
  ingress:
  - action: allow
    applications:
    - any
    ports: tcp/8080
    name: custom.containers.httpd-ingress-0
    priority: 4
    selector:
      comment: ""
      criteria:
      - key: domain
        op: =
        value: openshift-ingress
      - key: service
        op: =
        value: router-default.openshift-ingress
      name: nv.router-default.openshift-ingress
      original_name: ""
  - action: allow
    applications:
    - any
    name: custom.containers.httpd-ingress-1
    ports: any
    priority: 3
    selector:
      comment: ""
      criteria:
      - key: domain
        op: =
        value: openshift-monitoring
      - key: service
        op: =
        value: prometheus-k8s.openshift-monitoring
      name: nv.prometheus-k8s.openshift-monitoring
      original_name: ""
  - action: allow
    applications:
    - HTTP
    - SSL
    name: custom.containers.httpd-ingress-2
    ports: any
    priority: 2
    selector:
      comment: ""
      criteria: []
      name: external
      original_name: ""
  - action: allow
    applications:
    - HTTP
    - SSL
    name: custom.containers.httpd-ingress-3
    ports: any
    priority: 1
    selector:
      comment: ""
      criteria:
      - key: domain
        op: =
        value: sample1
      - key: service
        op: =
        value: httpd.sample1
      name: nv.httpd.sample1
      original_name: ""
  - action: deny
    applications:
    - any
    name: custom.containers.httpd-ingress-4
    ports: any
    priority: 0
    selector:
      comment: ""
      criteria:
      - key: container
        op: =
        value: '*'
      name: containers
      original_name: ""
  process:
  - action: allow
    allow_update: false
    name: cat
    path: /usr/bin/coreutils
  - action: allow
    allow_update: false
    name: sh
    path: /usr/bin/bash
  - action: allow
    allow_update: false
    name: curl
    path: '*'
  - action: allow
    allow_update: false
    name: httpd
    path: /usr/sbin/httpd
  process_profile:
    baseline: zero-drift
  target:
    policymode: N/A
    selector:
      comment: ""
      criteria:
      - key: container
        op: regex
        value: httpd*
      name: custom.containers.httpd
      original_name: ""
  waf:
    settings: []
    status: true
